{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["/**\n * \n * @param {*} data 当前数据是不是对象\n * @returns \n */\nexport function isObject(data) {\n    return typeof data === 'object' && data !== null\n}\n/**\n * 定义一个不可枚举的属性\n * @param {*} data \n * @param {*} key \n * @param {*} value \n */\n\nexport function def(data,key,value) {\n    Object.defineProperty(data,key,{\n        enumerable:false,\n        configurable:false,\n        value\n    })\n}","// 重写数组的7个方法 push  shift unshift pop reverse sort splice\n// slice不会改变原数组\n\nlet oldArrayMethods = Array.prototype\n\n// value.__protp__ = arrayMethods\n// arrayMethods.__proto__ = oldArrayMethods\nexport const arrayMethods = Object.create(oldArrayMethods)\n\nconst methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'reverse',\n    'sort',\n    'splice',\n]\n\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        console.log('用户调用了push'); // AOP切片编程\n        const result = oldArrayMethods[method].apply(this,args) // 调用原生的数组方法\n        // push unshift 添加的元素可能还是一个对象\n        let inserted;\n        let ob = this.__ob__\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;  \n                break;\n            case 'splice': // 3个 新增的属性 splice 有删除 新增的功能 arr.splice(0,1,{name:1})\n                inserted = args.slice(2)\n            default:\n                break;\n        }\n\n        if(inserted) ob.observerArray(inserted)\n\n        return result\n    }\n})","import {isObject,def} from '../util/index'\nimport {arrayMethods} from './array.js'\n// 把data中的数据 都重新定义\n// 但Object.defineProperty 不能兼容ie8及以下 所以vue2无法兼容ie8\n\nclass Observer{\n    constructor(value) {\n        // 如果是数组，会对索引也添加set和get，最好对数组再进行特殊处理\n        // value.__ob__ = this // 给每一个监控过的对象都加一个属性\n        def(value,'__ob__',this)\n        if(Array.isArray(value)) {\n            // 不要对索引进行观测，影响性能\n            // 如果数组里放的是对象，再监控\n\n\n            // push shift 劫持\n\n            value.__proto__ = arrayMethods\n            this.observerArray(value)\n        }else {\n            // vue如果数据的层次过多 需要第一的去解析对象中的和属性，依次增加set和get方法\n            // vue3 的proxy 不用递归也不用加set和get\n            this.walk(value)\n        }\n        \n\n        \n    }\n    observerArray(value) { // [{}]\n        for(let i = 0; i < value.length; i++) {\n            observe(value[i])\n        }\n    }\n    // 遍历对象用\n    walk(data) {\n        let keys = Object.keys(data) // [name,age,address] ,对象中属性组成的数组\n        keys.forEach((key)=>{\n            defineReactive(data,key,data[key])\n        })\n\n        // for ( let i = 0; i < keys.length; i++ ) {\n        //     let key = keys[i]; // 取第i个属性\n        //     let value = data[key]; // 取第i个值\n        //     defineReactive(data,key,value) // 把这个key value变成响应式\n        // }\n    }\n}\n\nfunction defineReactive(data,key,value) {\n    observe(value) // 是不是对象 递归实现深度检测 \n    Object.defineProperty(data,key,{\n        get() {\n            return value;\n        },\n        set(newValue) {\n            if( newValue === value) return;\n            console.log('值发生变化了');\n            observe(newValue) // 如果用户将一个值重新赋值成对象，需要劫持时做响应式\n            value = newValue\n        }\n    })\n}\n// 是不是对象\nexport function observe(data) {\n    let isObj = isObject(data)\n    // 不是对象\n    if(!isObj) {\n        return\n    }\n    // 是对象 需要观测数据 \n    return new Observer(data)\n    \n}","import {observe} from './observe/index'\nexport function initState(vm) {\n    // vue的数据来源 属性 方法 数据 计算属性 watch ,也是vue的初始化流程\n    const opts = vm.$options\n    // console.log(opts);\n    if (opts.props) {\n        initProps(vm)\n    }\n    if (opts.method) {\n        initMethods(vm)\n    }\n    if (opts.data) {\n        initData(vm)\n    }\n    if (opts.computed) {\n        initComputed(vm)\n    }\n    if (opts.watch) {\n        initWatch(vm)\n    }\n}\nfunction initProps(){}\nfunction initMethods(){}\nfunction initData(vm){\n    // 数据初始化\n    let data = vm.$options.data; // 用户传递的data\n    data = vm._data = typeof data === 'function' ? data.call(vm):data // data可能是个函数（返回值是对象），也可能是对象，只需要对象\n    console.log(data);\n    // 数据劫持 用户改变数据时 希望可以得到通知 -> 刷新页面\n    // MVVM模式 数据驱动视图变化\n    // Object.defineProperty() 给属性添加get和set方法\n    observe(data) // 响应式\n}\nfunction initComputed(){}\nfunction initWatch(){}","// ast语法树 是用对象来描述js语法的  虚拟dom  用对象来描述dom节点的\n// ?: 匹配不捕获\n\n// arguments[0] 匹配到的标签 arguments[1] 匹配到的标签名字\n// let r  = '<ab:cd>'.match(startTagOpen)\n// console.log(r);  ['<ab:cd','ab:cd']\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:dasda> 命名空间标签\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)// 匹配标签结尾的</div>\n\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性的 可以是双引号、单引号或者为空\n//console.log(`  aa=123`.match(attribute));\n\nconst startTagClose = /^\\s*(\\/?)>/ // 匹配标签结束的> 包含自闭合 <div />\n\nexport function compileToFunction(template) {\n\n    console.log(template,'---');\n    return function render() {\n        \n    }\n}\n\n// 结点\n{/* <div id=\"app\">\n    <p>hello</p>\n</div>\n\n// 语法\nlet root = {\n    tag:'div',\n    attrs:[{name:'id',value:'app'}],\n    parent:null,\n    type:1, // 元素\n    children:[{\n        tag:'p',\n        attrs:[],\n        parent:root,\n        type:1, // 元素\n        children:[{\n            text:'hello',\n            type:3, // 文本\n        }]\n    }]\n} */}","import {initState} from './state'\nimport { compileToFunction } from '../compiler/index.js';\n// 在原型上增加一个init方法\nexport function initMixin(Vue) {\n    // 初始化流程\n    Vue.prototype._init = function (options) {\n        console.log(options);\n        const vm = this\n        vm.$options = options // 用户传递的属性 data,watch\n\n        // 初始化状态\n        initState(vm) \n\n\n\n\n        // 如果用户传入了el属性 需要将页面渲染出来 \n        // 实现挂在流程\n        if(vm.$options.el) {\n            vm.$mount(vm.$options.el)\n        }\n\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options\n        el = document.querySelector(el); // 返回一个dom元素\n\n        // 默认会先查找有没有render  没有render会用template 没有template用el中的内容\n\n        if(!options.render) {\n            // 对模版进行编译\n            let template = options.template; // 取出模版\n            if(!template && el) {\n                template = el.outerHTML // 整个div  \n            }\n            console.log(template);\n            const render = compileToFunction(template);\n            options.render = render\n            // 需要把template 转换成render函数  vue1.0用的正则 vue2.0虚拟dom\n        }\n        // options.render\n    }\n}","import {initMixin} from './init.js'\nfunction Vue(options) {\n    this._init(options)\n}\n// 通过文件引入的方式，给vue原型挂载方法\ninitMixin(Vue)\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","console","log","args","result","apply","inserted","ob","__ob__","slice","observerArray","Observer","isArray","__proto__","walk","i","length","observe","keys","defineReactive","get","set","newValue","isObj","initState","vm","opts","$options","props","initData","computed","watch","_data","call","compileToFunction","template","render","initMixin","Vue","_init","options","el","$mount","document","querySelector","outerHTML"],"mappings":"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"}