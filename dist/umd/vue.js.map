{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observer/array.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/util/next-tick.js","../../src/observer/schedular.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/mixin.js","../../src/initGlobalAPI/const.js","../../src/initGlobalAPI/assets.js","../../src/initGlobalAPI/extend.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["/**\n * \n * @param {*} data 当前数据是不是对象\n * @returns \n */\nexport function isObject(data) {\n    return typeof data === 'object' && data !== null\n}\n/**\n * 定义一个不可枚举的属性\n * @param {*} data \n * @param {*} key \n * @param {*} value \n */\n\nexport function def(data,key,value) {\n    Object.defineProperty(data,key,{\n        enumerable:false,\n        configurable:false,\n        value\n    })\n}\n// 取值实现代理效果\nexport function proxy(vm,source,key) {\n    Object.defineProperty(vm,key,{\n        get(){\n            return vm[source][key]\n        },\n        set(newValue){\n            vm[source][key] = newValue;\n        }\n    })\n}\n\nconst LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed'\n]\nlet strats = {}\nLIFECYCLE_HOOKS.forEach((hook)=>{\n    strats[hook] = mergeHook\n})\n\nfunction mergeAssets(parentVal,childVal) {\n    const res = Object.create(parentVal); // res.__proto__ = parentVal\n    // 先在自身上找 找不到再用父级的\n    if (childVal) {\n        for (let key in childVal) {\n            res[key] = childVal[key]\n        }\n    }\n    return res;\n}\n\nstrats.components = mergeAssets;\n\nfunction mergeHook(parentVal,childVal) {\n    if(childVal){\n        if(parentVal){\n            return parentVal.concat(childVal);\n        }else {\n            return [childVal];\n        }\n    }else {\n        return parentVal\n    }\n}\n\nexport function mergeOptions(parent,child) {\n    \n    const options = {}\n\n    for (let key in parent) {\n        mergeField(key)\n    }\n    for (let key in child) {\n        // 如果已经合并过了就不需要再次合并了\n        if(!parent.hasOwnProperty(key)){\n            mergeField(key)\n        }\n    }\n    // 默认的合并策略 但是有些属性 需要有特殊的合并方式：生命周期合并\n    function mergeField(key) {\n        // 合并两个生命周期\n        if(strats[key]) {\n            return options[key] = strats[key](parent[key],child[key])\n        }\n      \n        if(typeof parent[key] === 'object' && typeof child[key] === 'object'){\n            options[key] = {\n                ...parent[key],\n                ...child[key]\n            }\n        }else if (child[key] == null) {\n            options[key] = parent[key];\n        }else {\n            // 子（新）覆盖父（旧）的\n            // data:{}  data:123   -> data:123\n            options[key] = child[key]\n        }\n        \n    }\n    return options\n}\n\nexport function isReservedTag(tagName) {\n    let str = 'div,p,input,span,button';\n    let obj = {};\n    str.split(',').forEach(tag=>{\n        obj[tag] = true;\n    })\n    return obj[tagName]\n}","// 重写数组的7个方法 push  shift unshift pop reverse sort splice\n// slice不会改变原数组\n\nlet oldArrayMethods = Array.prototype\n\n// value.__protp__ = arrayMethods\n// arrayMethods.__proto__ = oldArrayMethods\nexport const arrayMethods = Object.create(oldArrayMethods)\n\nconst methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'reverse',\n    'sort',\n    'splice',\n]\n\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        // console.log('用户调用了push'); // AOP切片编程\n        const result = oldArrayMethods[method].apply(this,args) // 调用原生的数组方法\n        // push unshift 添加的元素可能还是一个对象\n        let inserted;\n        let ob = this.__ob__\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;  \n                break;\n            case 'splice': // 3个 新增的属性 splice 有删除 新增的功能 arr.splice(0,1,{name:1})\n                inserted = args.slice(2)\n            default:\n                break;\n        }\n\n        if(inserted) ob.observerArray(inserted)\n\n        ob.dep.notify()\n\n        return result\n    }\n})","// watcher 和 dep 是多对多的关系\nlet id = 0;\nclass Dep{\n    constructor(){\n        this.id = id++\n        this.subs =[];\n    }\n    addSub(watcher){\n        this.subs.push(watcher); // 观察者模式\n    }\n    depend(){\n        // 让这个watcher 记住我当前的dep\n        Dep.target.addDep(this)\n    }\n    notify(){\n        this.subs.forEach((watcher)=>{\n            watcher.update()\n        })\n    }\n}\nlet stack = [];\n// 21-10-21  目前可以做到保留和移除watcher的功能\nexport function pushTarget(watcher) {\n    Dep.target = watcher;\n    stack.push(watcher);\n    \n}\nexport function popTarget() {\n    stack.pop();\n    Dep.target = stack[stack.length-1];\n}\nexport default Dep;","import {isObject,def} from '../util/index'\nimport {arrayMethods} from './array.js'\nimport Dep from './dep'\n// 把data中的数据 都重新定义\n// 但Object.defineProperty 不能兼容ie8及以下 所以vue2无法兼容ie8\n\nclass Observer{\n    constructor(value) {\n        this.dep = new Dep();\n        // 如果是数组，会对索引也添加set和get，最好对数组再进行特殊处理\n        // value.__ob__ = this // 给每一个监控过的对象都加一个属性\n        def(value,'__ob__',this)\n        if(Array.isArray(value)) {\n            // 不要对索引进行观测，影响性能\n            // 如果数组里放的是对象，再监控\n\n\n            // push shift 劫持\n\n            value.__proto__ = arrayMethods\n            this.observerArray(value)\n        }else {\n            // vue如果数据的层次过多 需要第一的去解析对象中的和属性，依次增加set和get方法\n            // vue3 的proxy 不用递归也不用加set和get\n            this.walk(value)\n        }\n        \n\n        \n    }\n    observerArray(value) { // [{}]\n        for(let i = 0; i < value.length; i++) {\n            observe(value[i])\n        }\n    }\n    // 遍历对象用\n    walk(data) {\n        let keys = Object.keys(data) // [name,age,address] ,对象中属性组成的数组\n        keys.forEach((key)=>{\n            defineReactive(data,key,data[key])\n        })\n\n        // for ( let i = 0; i < keys.length; i++ ) {\n        //     let key = keys[i]; // 取第i个属性\n        //     let value = data[key]; // 取第i个值\n        //     defineReactive(data,key,value) // 把这个key value变成响应式\n        // }\n    }\n}\n\nfunction defineReactive(data,key,value) {\n    let dep = new Dep();\n    let childOb = observe(value) // 是不是对象 递归实现深度检测 \n    Object.defineProperty(data,key,{\n        configurable:true,\n        enumerable:true,\n        get() {\n            // {{}}的值一开始走两次取值的原因是：JSON.stringfy会对内容进行一次取汁\n            if (Dep.target) { // 如果当前有watcher\n                dep.depend(); // 意味着我要将watcher存起来\n                if (childOb) { // ******数组的依赖收集******\n                    childOb.dep.depend(); // 收集了数组的相关依赖\n                    // 如果数组中还有数组\n                    if (Array.isArray(value)) {\n                        dependArray(value)\n                    }\n                }\n            }\n            \n            console.log('取值');\n            return value;\n            \n        },\n        set(newValue) {\n            if( newValue === value) return;\n            console.log('设置值');\n            observe(newValue) // 如果用户将一个值重新赋值成对象，需要劫持时做响应式\n            value = newValue\n            dep.notify(); // 通知依赖的watcher进行更新操作\n        }\n    })\n}\nfunction dependArray(value) {\n    for(let i = 0; i < value.length; i++){\n        let current = value[i]; // 将数组中的每一个都取出来 数据变化后 去更新视图\n        // 数组中的数组的依赖收集\n        current.__ob__ && current.__ob__.dep.depend();\n        if(Array.isArray(current)) {\n            dependArray(current)\n        }\n    }\n}\n// 是不是对象\nexport function observe(data) {\n    let isObj = isObject(data)\n    // 不是对象\n    if(!isObj) {\n        return\n    }\n    // 是对象 需要观测数据 \n    return new Observer(data)\n    \n}","import {observe} from './observer/index'\nimport { proxy } from './util/index'\nexport function initState(vm) {\n    // vue的数据来源 属性 方法 数据 计算属性 watch ,也是vue的初始化流程\n    const opts = vm.$options\n    // console.log(opts);\n    if (opts.props) {\n        initProps(vm)\n    }\n    if (opts.method) {\n        initMethods(vm)\n    }\n    if (opts.data) {\n        initData(vm)\n    }\n    if (opts.computed) {\n        initComputed(vm)\n    }\n    if (opts.watch) {\n        initWatch(vm)\n    }\n}\nfunction initProps(){}\nfunction initMethods(){}\nfunction initData(vm){\n    // 数据初始化\n    let data = vm.$options.data; // 用户传递的data\n    data = vm._data = typeof data === 'function' ? data.call(vm):data // data可能是个函数（返回值是对象），也可能是对象，只需要对象\n    // console.log(data);\n    // 数据劫持 用户改变数据时 希望可以得到通知 -> 刷新页面\n    // MVVM模式 数据驱动视图变化\n    // Object.defineProperty() 给属性添加get和set方法\n\n    for(let key in data){\n        proxy(vm,'_data',key)\n    }\n\n    observe(data) // 响应式\n}\nfunction initComputed(){}\nfunction initWatch(){}","// ast语法树 是用对象来描述js语法的  虚拟dom  用对象来描述dom节点的\n// ?: 匹配不捕获\n\n// arguments[0] 匹配到的标签 arguments[1] 匹配到的标签名字\n// let r  = '<ab:cd>'.match(startTagOpen)\n// console.log(r);  ['<ab:cd','ab:cd']\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa 两个斜杠：字符串一层正则一层\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:dasda> 命名空间标签\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);// 匹配标签结尾的</div>\n\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的 可以是双引号、单引号或者为空\n//console.log(`  aa=123`.match(attribute));\n\nconst startTagClose = /^\\s*(\\/?)>/ // 匹配标签结束的> 包含自闭合 <div />\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g  // 匹配花括号{{}}\n\n\nexport function parseHTML(html) {\n    let root = null; // ast语法树的树根\n    let currentParent; // 标识当前父亲是谁\n    let stack = [];\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n\n    function start(tagName, attrs) {\n        // 遇到开始标签 就创建一个ast元素\n        // console.log('开始标签', tagName, '属性是:', attrs);\n\n        let element = createASTElement(tagName, attrs)\n        if (!root) {\n            root = element;\n        }\n        currentParent = element; // 把当前元素标记成父ast树        \n        stack.push(element)\n    }\n    function chars(text) {\n        // console.log('文本是', text);\n        text = text.replace(/\\s/g, '')\n        if (text) {\n            currentParent.children.push({\n                text,\n                type: TEXT_TYPE\n            })\n        }\n    }\n    function end(tagName) {\n        // console.log('结束标签：', tagName);\n        let element = stack.pop(); // 拿到的是ast对象\n        // TODO: 是不是同一个 如 <div><p></a></p></div>\n        // 要表示当前这个p是属于这个div的儿子的\n        currentParent = stack[stack.length - 1]\n        if (currentParent) {\n            element.parent = currentParent\n            currentParent.children.push(element) // 实现了一个树的父子关系\n        }\n    }\n    // 不停的解析html\n    while (html) {\n        let textEnd = html.indexOf('<')\n        if (textEnd == 0) {\n\n            // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\n            let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果 tagName,attrs\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs) // 1解析开始标签\n                // console.log(666,startTagMatch);\n                continue; // 如果开始标签匹配完毕后 继续下一次 匹配\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1]); // 2解析结束标签\n                continue;\n            }\n        }\n        let text;\n        if (textEnd >= 0) {\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            advance(text.length)\n            chars(text) // 3解析文本\n        }\n    }\n    function advance(n) {\n        html = html.substring(n)\n    }\n    function parseStartTag() {\n        let start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            // console.log('-----',start);\n            advance(start[0].length) // <div 将标签删除\n            // console.log(html);\n            let end, attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                // 将属性进行解析\n                advance(attr[0].length); // 将属性去掉\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                })\n            }\n            if (end) { // 去掉开始标签的 >\n                advance(end[0].length);\n                return match\n            }\n            // console.log(match,html);\n        }\n\n    }    \n    return root;\n}\n","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g  // 匹配花括号{{}}\nfunction genChildren(el) {\n    let children  = el.children\n    if(children && children.length>0){\n        return `${children.map((c)=>gen(c)).join(',')}`\n    }else {\n        return false;\n    }\n}\n\nfunction gen(node) {\n    if(node.type == 1){\n        // 元素标签\n        return generate(node)\n    }else{\n        // 文字标签\n        let text = node.text; // a {{name}} b {{age}} c\n        // _v(\"a\"+_s(name)+\"b\"+_s(age)+\"c\")\n        // 这里使用正则匹配，exec可以全取到，match只能取到name、age\n        let tokens = [];\n        let match,index;\n        let lastIndex = defaultTagRE.lastIndex = 0; // css-loader原理一样\n        while(match = defaultTagRE.exec(text)){\n            index = match.index;\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index + match[0].length\n            \n        }\n        // 最后多余的字符串\n        if(lastIndex < text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        return `_v(${tokens.join('+')})`\n    }\n}\n\nfunction genProps(attrs) {\n    let str = ''\n    for(let i = 0; i < attrs.length; i++){ // [{name:'id',value:'app'}]\n        let attr = attrs[i];\n        if(attr.name == 'style'){\n            // style=\"color:red;fontSize:14px\" => style:{color:'red}.id:name\n            let obj = {};\n            attr.value.split(';').forEach((item)=>{\n                let [key,value] = item.split(':')\n                obj[key] = value;\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\n\nexport function generate(el) {\n    let children = genChildren(el)\n    let code = `_c(\"${el.tag}\",${el.attrs.length?genProps(el.attrs):'undefined'}${children?`,${children}`:''})`\n    return code\n}","import {parseHTML} from './parser-html'\nimport { generate } from './generate'\n\nexport function compileToFunction(template) {\n    // 1）解析html字符串 将html字符串 -> ast语法树\n    let root = parseHTML(template)\n    // 需要将ast语法树转成render函数 就是字符串拼接 （模版引擎）\n    let code  = generate(root)\n    // 核心思路就是将模版转化成下面这段字符串\n    // <div id=\"app\"><p>hello {{name}}</p> hello</div>\n    // 将ast树 再次转化成js的语法\n    // _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello'+_s(name))),_v('hello'))\n\n\n    // 所有模版引擎的实现 都需要 new Function + with\n    // with为了拿到data中的数据\n    // function () {\n    //     with(this){  this为vm实例 vm.render\n    //         return _c(\"div\",{id:\"app\",style:{\"color\":\"red\",\"background-color\":\" blue\"}},_v(\"hello\"),_c(\"p\",undefined,_v(\"123\"+_s(address))))\n    //     }\n    // }\n    let renderFn = new Function(`with(this){ return ${code}}`)\n    console.log(root,'---');\n\n    // vue的render 他返回的是虚拟dom\n    return renderFn;\n}\n\n// 结点\n{/* <div id=\"app\">\n    <p>hello</p>\n</div>\n\n// 语法\nlet root = {\n    tag:'div',\n    attrs:[{name:'id',value:'app'}],\n    parent:null,\n    type:1, // 元素\n    children:[{\n        tag:'p',\n        attrs:[],\n        parent:root,\n        type:1, // 元素\n        children:[{\n            text:'hello',\n            type:3, // 文本\n        }]\n    }]\n} */}","let callbacks = []\n// [flushSchedularQueue.userNextTick]\nlet waiting = false;\nfunction flushCallback() {\n    // console.log(callbacks);\n    callbacks.forEach(cb=>cb());\n    waiting = false;\n    callbacks = [];\n}\nexport function nextTick(cb) {\n    // 多次调用nextTick  如果没有刷新的时候  就先把他放到数组中，\n    // 刷新后 更改waiting\n    callbacks.push(cb)\n    if (waiting === false) {\n        // 当前是否已经等待\n        setTimeout(flushCallback, 0);\n        waiting = true;\n    }\n    \n}","import {nextTick} from '../util/next-tick'\nlet queue = [];\nlet has = {};\nfunction flushSchedularQueue() {\n    queue.forEach((watcher=>watcher.run()))\n    queue = []; //  让下一次可以继续使用\n    has = {};\n}\n\nexport function queueWatcher(watcher) {\n    const id = watcher.id\n    if (has[id] == null) {\n        has[id] = true;\n\n        // 宏任务和微任务 （vue里面使用Vue.nextTick)\n        // Vue.nextTick = promise/mutationObserver/ setImmediate/setTimeout\n        queue.push(watcher)\n   \n        nextTick(flushSchedularQueue, 0);\n    }\n}","import {pushTarget,popTarget} from './dep'\nimport {queueWatcher} from './schedular'\nlet id = 0;\nclass Watcher{\n    constructor(vm,exprOrFn,callback,options){ // 固定顺序\n        this.vm = vm;\n        this.getter = exprOrFn; // 将传来的函数放到getter属性上\n        this.callback = callback;\n        this.options = options;\n        this.id = id++;\n        this.depsId = new Set(); // es6中的集合（不能放重复项）\n        this.deps = []\n        this.get()\n    }\n    addDep(dep){ // watcher里不能放重复的dep，反之同理\n        let id = dep.id;\n        if(!this.depsId.has(id)){\n            this.depsId.add(id);\n            this.deps.push(dep);\n            dep.addSub(this);\n        }\n    }\n    get(){\n        pushTarget(this); // 把watcher存起来 Dep.target\n        this.getter(); // 渲染watcher的执行\n        popTarget(); // 移除watcher\n    }\n    update(){\n        // this.get()\n        queueWatcher(this)\n    }\n    run() {\n        this.get()\n    }\n}\n\n\n// 在模版中取值时  会进行依赖收集  在更改数据时会进行对应的watcher 调用更新操作\nexport default Watcher","export function patch(oldVnode, vnode) {\n    if (!oldVnode) {\n        // 通过当前的虚拟节点 创建元素并返回\n        return createElm(vnode);\n    }else {\n        // 递归创建真实节点 替换掉老的节点\n        const isRealElement = oldVnode.nodeType;\n        if (isRealElement) {\n            const oldElm = oldVnode;\n            const parentElm = oldVnode.parentNode;\n\n            let el = createElm(vnode)\n            parentElm.insertBefore(el, oldElm.nextSibling) // 新的插到旧的下面去\n            parentElm.removeChild(oldElm)\n\n            return el;\n        }else {\n            // 1.标签不一致,直接替换\n            if (oldVnode.tag !== vnode.tag) {\n                \n                \n                oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el)\n                \n            }\n            // 2.文本\n            if (!oldVnode.tag) {\n                if (oldVnode.text !== vnode.text) {\n                    oldVnode.el.textContent = vnode.text;\n                }\n                \n            }\n            // 3.标签一致且不是文本 对比属性\n            let el = vnode.el = oldVnode.el;\n            updateProperties(vnode,oldVnode.data);\n\n            let newChildren = vnode.children || [];\n            let oldChildren = oldVnode.children || [];\n            \n            if (newChildren.length > 0 && oldChildren.length > 0) {\n                // 最重要的部分 两个都有孩子 核心方法updateChildren\n                updateChildren(el, oldChildren, newChildren);\n                \n            }else if (newChildren.length > 0) {\n                // 新的有孩子 老的没孩子 直接把新孩子插入到dom中\n                for (let i = 0; i < newChildren.length; i++) {\n                    el.appendChild(createElm(newChildren[i]))\n                }\n            }else if (oldChildren.length > 0) {\n                // 新的没孩子 老的有孩子 把老孩子置空\n                el.innerHTML = '';\n            }\n            \n            \n        }\n    }\n    // 递归创建真实节点 替换掉老的节点\n}\nfunction isSameVnode(oldVnode,newVnode) {\n    return (oldVnode.tag == newVnode.tag) && (oldVnode.key === newVnode.key)\n}\nfunction updateChildren(parent, oldChildren, newChildren) {\n    // vue采用双指针的方式\n\n    // vue在内部比对的过程中做了很多优化策略\n\n    //？？？？不先删旧节点多余的？\n    let oldStartIndex = 0;\n    let oldStartVnode = oldChildren[0];\n    let oldEndIndex = oldChildren.length - 1;\n    let oldEndVnode = oldChildren[oldEndIndex];\n\n\n    let newStartIndex = 0;\n    let newStartVnode = newChildren[0];\n    let newEndIndex = newChildren.length - 1;\n    let newEndVnode = newChildren[newEndIndex];\n\n    \n    const makeIndexByKey = (children) => {\n        let map = {};\n        children.forEach((item,index)=>{\n            // console.log('key',child);\n            if (item.key) {\n                map[item.key] = index; // 根据key创建一个映射表\n            }\n        })\n        return map;\n    }\n    let map = makeIndexByKey(oldChildren);\n\n    // 在比对的过程中 新老虚拟节点有一方循环完毕就结束\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n        // 在老指针移动过程中可能会碰到undefined\n        if (!oldStartVnode) {\n            oldStartVnode = oldChildren[++oldStartIndex];\n\n        }else if (!oldEndVnode) {\n            oldEndVnode = oldChildren[--oldEndIndex];\n        }else\n        if (isSameVnode(oldStartVnode, newStartVnode)){\n        // 如果是同一个节点 就需要比对这个元素的属性\n        // 优化向后插入的情况 ABCD->ABCDE\n            patch(oldStartVnode,newStartVnode);\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newStartVnode = newChildren[++newStartIndex];\n            \n        }else if (isSameVnode(oldEndVnode, newEndVnode)){\n        // 优化向前插入的情况 ABCD->EABCD \n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        }else if (isSameVnode(oldStartVnode, newEndVnode)){\n        // 优化头移尾的问题 ABCD->BCDA\n            patch(oldStartVnode,newEndVnode);\n            parent.insertBefore(oldStartVnode.el,oldEndVnode.el.nextSibling)\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        }else if (isSameVnode(oldEndVnode, newStartVnode)){\n        // 优化尾移头的问题 ABCD->DABC\n            patch(oldEndVnode,newStartVnode);\n            parent.insertBefore(oldEndVnode.el,oldStartVnode.el)\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        }else {\n            // 乱序 暴力比对\n            // 先根据老节点的key 做一个映射表，拿新的虚拟节点去映射表中查找，如果可以查找到，则进行移动操作\n            // 移到老偷指针前面的位置 如果找不到直接将元素插入即可\n            let moveIndex = map[newStartVnode.key];\n            if (!moveIndex){\n                parent.insertBefore(createElm(newStartVnode),oldStartVnode.el);\n                \n            } else {\n                \n                \n                let moveVnode = oldChildren[moveIndex];\n                console.log('!!!!',oldChildren,moveIndex,moveVnode);\n                debugger\n                oldChildren[moveIndex] = undefined; // 占位 防止移动后塌陷\n                parent.insertBefore(moveVnode.el,oldStartVnode.el); // insertbefore如果是当前现有的节点，是移动的效果而不是拷贝\n                \n                patch(moveVnode,newStartVnode); // 比对子元素是否一致\n                \n            }\n            newStartVnode = newChildren[++newStartIndex];\n            \n        }\n        \n    }\n\n    if (newStartIndex <= newEndIndex) {\n        // 可能向后插入 也有可能向前插入 insertbefore\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\n            let el = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el\n            parent.insertBefore(createElm(newChildren[i]), el); // 第二个参数为null等价于appendchild\n              \n        }\n    }\n    if (oldStartIndex <= oldEndIndex) {\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n            let child = oldChildren[i];\n            if (child != undefined){\n                parent.removeChild(child.el);\n\n            }\n        }\n    }\n}\nfunction createComponent(vnode) {\n    let i = vnode.data;\n    if ((i = i.hook) && (i = i.init)) {\n        i(vnode);\n    }\n    // 执行完毕后\n    if(vnode.componentInstance) {\n        return true;\n    }\n}\nexport function createElm(vnode) { // 根据虚拟节点 常见真实的节点\n    // return document.createElement('div')\n    const {tag,data,key,children,text} = vnode;\n    // 是标签就创建标签\n    if (typeof tag === 'string'){\n        // 组件没有孩子 需要一层判断\n        if (createComponent(vnode)) {\n            // 这里应该返回的是真实的dom元素\n            return vnode.componentInstance.$el;\n        }\n        vnode.el = document.createElement(tag)\n        updateProperties(vnode)\n        children.forEach(child=>{\n            vnode.el.appendChild(createElm(child)) // 递归创建儿子节点 将儿子节点扔到父节点中\n        })\n    }else {\n        // 虚拟dom上映射真实dom 方便后续操作\n        vnode.el = document.createTextNode(text)\n    }\n    \n    return vnode.el\n}\n\nfunction updateProperties(vnode, oldProps = {}) {\n    let newProps = vnode.data || {};\n    console.log(el,newProps,oldProps);\n    let el = vnode.el;\n    // 如果老的属性有 新的属性没有 就在真实dom上将这个属性删掉\n\n    let newStyle = newProps.style || {};\n    let oldStyle = oldProps.style || {};\n\n    // mergeOptions\n    for (let key in oldStyle) {\n        if (!newStyle[key]) {\n            el.style[key] = '';\n        }\n    }\n    for (let key in oldProps) {\n        if (!newProps[key]) {\n            el.removeAttribute(key)\n        }\n    }\n\n    for(let key in newProps){\n        if(key === 'style'){\n            for(let styleName in newProps.style){\n                // 新增样式\n                el.style[styleName] = newProps.style[styleName];\n            }\n        }else if(key === 'class'){\n            el.className = newProps.class;\n        }else {\n            debugger\n            el.setAttribute(key,newProps[key])\n        }\n    }\n}","import Watcher from \"./observer/watcher\";\nimport {patch} from './vdom/patch'\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        // 拿到render返回的虚拟节点 生成真实节点\n        const vm = this;\n        const prevVnode = vm._vnode; // 保存上一次渲染的虚拟节点 为了实现比对\n        vm._vnode = vnode;\n        if (!prevVnode){\n            vm.$el = patch(vm.$el,vnode);\n        }else {\n            vm.$el = patch(prevVnode,vnode);\n        }\n    }\n}\n\nexport function mountComponent(vm,el) {\n    const options = vm.$options;\n    vm.$el = el // 真实的dom元素\n\n    // Watcher 就是用来渲染的\n    // vm._render 通过解析的render方法 渲染出虚拟dom\n    // vm._update 通过虚拟dom 创建真实的dom\n    callHook(vm,'beforeMount')\n    // 渲染页面\n    let updateComponent = () =>{ // 无论是渲染还是更新都会调用此方法\n        console.log('调用了update');\n        // 返回的是虚拟dom\n        vm._update(vm._render());\n    }\n    // 渲染watcher  每个组件都有一个watcher\n    // 每次数据变化后 都会重新执行updateComponent方法\n    new Watcher(vm,updateComponent,()=>{},true) // true表示他是一个渲染watcher\n    callHook(vm,'mounted')\n}\n\nexport function callHook(vm,hook) {\n    const handlers = vm.$options[hook] // [fn,fn,fn]\n    if(handlers) { // 找到对应的钩子依次执行\n        for(let i = 0; i < handlers.length; i++) {\n            handlers[i].call(vm); // 保证传来的beforeCreate中的调用的this指向实例\n        }\n    }\n}","import {initState} from './state'\nimport { compileToFunction } from './compiler/index.js';\nimport { callHook, mountComponent } from './lifecycle';\nimport { mergeOptions } from './util/index';\nimport { nextTick } from './util/next-tick';\n// 在原型上增加一个init方法\nexport function initMixin(Vue) {\n    // 初始化流程\n    Vue.prototype._init = function (options) {\n        console.log(options);\n        const vm = this\n        vm.$options = mergeOptions(vm.constructor.options,options) // 用户传递的属性 data,watch       \n        console.log(vm.$options,'!!!!!!!');\n        // Attention:这里注意不要写成:\n        // vm.$options = mergeOptions(Vue.options,options) \n        // 因为有这样一种情况（子类调用）\n        // A extends Vue    A继承了Vue\n        // let a = new A\n        // a._init     这样调用才保证options这里是A而不是Vue\n\n        callHook(vm,'beforeCreate')\n\n        // 初始化状态\n        initState(vm) \n\n        callHook(vm,'created')\n\n\n        // 如果用户传入了el属性 需要将页面渲染出来 \n        // 实现挂载流程\n        if(vm.$options.el) {\n            vm.$mount(vm.$options.el)\n        }\n\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options\n        el = document.querySelector(el); // 返回一个dom元素\n\n        // 默认会先查找有没有render  没有render会用template 没有template用el中的内容\n\n        if(!options.render) {\n            // 对模版进行编译\n            let template = options.template; // 取出模版\n            if(!template && el) {\n                template = el.outerHTML // 整个div  \n            }\n            console.log(template);\n            const render = compileToFunction(template);\n            console.log('render:',render);\n            options.render = render\n            // 需要把template 转换成render函数  vue1.0用的正则 vue2.0虚拟dom\n        }\n        // options.render\n\n        // 渲染当前组件 挂载这个组件\n        mountComponent(vm,el)\n    }\n    // 用户调用的nexttick\n    Vue.prototype.$nextTick = nextTick\n}","import { isObject, isReservedTag } from \"../util/index\";\n\nexport function createElement(vm,tag,data={},...children) {\n    // ast => render => 调用render时走到这里\n    let key = data.key;\n    if(key){\n        delete data.key\n    }\n    if (isReservedTag(tag)){\n        // 如果是标签\n        return vnode(tag,data,key,children,undefined)\n    }else {\n        // 如果是组件\n        let Ctor = vm.$options.components[tag];\n        // 找到了子组件的构造函数\n        return createComponent(vm,tag,data,key,children,Ctor)\n    }\n    \n}\nfunction createComponent(vm,tag,data,key,children,Ctor) {\n    if(isObject(Ctor)){\n        Ctor = vm.$options._base.extend(Ctor); // Vue.extend()\n    }\n    data.hook = {\n        init (vnode) {\n            // 当前组件的实例就是componentInstance\n            let child = vnode.componentInstance = new Ctor({_isComponent: true});\n            // 组件的挂载 vm.$el\n            child.$mount();\n            // return child;\n        }\n    }\n\n    return vnode(`vue-component-${Ctor.cid}-${tag}`,data,key,undefined,{Ctor,children}); // 组件内的不叫孩子叫插槽\n}\nexport function createTextNode(vm,text) {\n    return vnode(undefined,undefined,undefined,undefined,text)\n}\n\nfunction vnode(tag,data,key,children,text,componentOptions) {\n    // !!!!!!!!\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text,\n        componentOptions\n    }\n}\n// 虚拟节点 就是通过_c _v 实现用对象来描述dom的操作（对象）\n\n// 1）将template 转成ast树 -> 生成render方法 -> 生成虚拟dom -> 真实的dom\n// 页面更新的话 重新生成虚拟dom 和上次做对比 -> 更新dom\n\n// {\n//     tag:'div',\n//     key:undefined,\n//     data:{},\n//     children:[],\n//     text:undefined\n// }","import { createElement, createTextNode } from \"./vdom/create-element\"\n\nexport function renderMixin(Vue) {\n    // _c 创建元素的虚拟节点\n    // _v 创建文本的虚拟节点\n    // _s JSON.stringfy\n    Vue.prototype._c = function () {\n        return createElement(this,...arguments) // tag,data,children1,children\n    }\n    Vue.prototype._v = function (text) {\n        return createTextNode(this,text)\n    }\n    Vue.prototype._s = function (val) {\n        return val == null? '':(typeof val == 'object'? JSON.stringify(val):val)\n    }\n\n    Vue.prototype._render = function () {\n       const vm = this\n       \n       const {render} = vm.$options\n    //    console.log(render,this._s(),this);\n    //    render()是不行的 render中with(this){内部this指向的是window} 必须绑定\n       let vnode = render.call(vm) // 去实例上取值\n       return vnode\n    }\n}","export default function initMixin(Vue) {\n    Vue.mixin = function (mixin) {\n        this.options = mergeOptions(this.options,mixin)\n    }\n}","export const ASSETS_TYPE = [\n    'component',\n    'filter',\n    'directive'\n]","import { ASSETS_TYPE } from \"./const\";\n\nexport default function initAssetRegisters(Vue) {\n    ASSETS_TYPE.forEach(type=>{\n        Vue[type] = function (id, definition) {\n            if (type === 'component') {\n                // 注册全局组件\n                // 调用extend\n                // 子组件可能也有component方法 希望extend的调用永远是父类所以\n                definition = this.options._base.extend(definition)\n            }else if (type === 'filter') {\n\n            }else if (type === 'directive') {\n\n            }\n            this.options[type+'s'][id] = definition\n        }\n    })\n}","import { mergeOptions } from \"../util/index\";\nexport default function initExtend(Vue) {\n    let cid = 0;\n    Vue.extend =function (extendOptions) {\n\n        const Sub = function VueComponent(options) {\n            this._init(options)\n        }\n        // 让子类也拥有父类的方法\n        Sub.cid = cid++;\n        Sub.prototype = Object.create(this.prototype); // JS 原生问题\n        Sub.prototype.constructor = Sub; // 必须来这么一下 否则使用object.create后 Sub类的实例的构造函数会指向父类\n        Sub.options = mergeOptions(\n            this.options,\n            extendOptions\n        )\n\n        return Sub;\n    }\n}","import initMixin from \"./mixin\";\nimport initAssetRegisters from './assets';\nimport {ASSETS_TYPE} from './const'\nimport initExtend from \"./extend\";\nexport function initGlobalAPI(Vue) {\n    // 全局api不在实例上 放在一个对象里整合了所有全局内容\n    Vue.options = {};\n    initMixin(Vue)\n    \n\n\n    ASSETS_TYPE.forEach( type=> {\n        Vue.options[type+'s'] = {}\n    });\n    Vue.options._base = Vue;\n\n    initExtend(Vue)\n    initAssetRegisters(Vue)\n\n\n    \n    // 生命周期的合并策略   [beforeCreate,beforeCreate]\n    // Vue.mixin({\n    //     b:{m:1},\n    //     c:1,\n    //     beforeCreate(){\n    //         console.log('mixin 1');\n    //     }\n    // })\n    // Vue.mixin({\n    //     b:{n:2},\n    //     d:2,\n    //     beforeCreate(){\n    //         console.log('mixin 2');\n    //     }\n    // })\n    // console.log(Vue.options,'****');\n}","import {initMixin} from './init.js'\nimport {renderMixin} from './render'\nimport {lifecycleMixin} from './lifecycle'\nimport {initGlobalAPI} from './initGlobalAPI/index'\nimport { compileToFunction } from './compiler/index.js'\nimport { createElm, patch } from './vdom/patch.js'\nfunction Vue(options) {\n    // 进行Vue的初始化操作\n    this._init(options)\n}\n// 通过文件引入的方式，给vue原型挂载方法\ninitMixin(Vue) // 给原型上添加一个_init方法\nrenderMixin(Vue)\nlifecycleMixin(Vue)\n\n// 初始化全局api\ninitGlobalAPI(Vue)\n\n\n\n// demo 比对两个vnode\n// let vm1 = new Vue ({\n//     data:{\n//         name:'kitty'\n//     }\n// })\n// let render1 = compileToFunction(`<div b=\"111\">\n// <div key=\"a\" style=\"background-color:red;\">A</div>\n// <div key=\"b\" style=\"background-color:blue;\">B</div>\n// <div key=\"c\" style=\"background-color:yellow;\">C</div>\n// </div>`);\n// let vnode1 = render1.call(vm1)\n\n// let el = createElm(vnode1)\n// document.body.appendChild(el)\n// console.log('第一个实例',render1,vnode1);\n\n// let vm2 = new Vue ({\n//     data:{\n//         name:'motor'\n//     }\n// })\n// let render2 = compileToFunction(`<div c=\"666\">\n// <div key=\"c\" style=\"background-color:yellow;\">C<p>xixixi</p></div>\n// <div key=\"a\" style=\"background-color:red;\">A</div>\n// <div key=\"b\" style=\"background-color:blue;\">B<p>hhahaha</p></div>\n// </div>`);\n// let vnode2 = render2.call(vm2)\n// console.log('第二个实例',render2,vnode2);\n\n// setTimeout(() => {\n//     patch(vnode1,vnode2)\n// }, 3000);\n\n\n// 1.diff算法的特点是 平级比对，我们正常操作dom元素，很少涉及到父变成子 子变成父 这里时间复杂度O(n^3)\n\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","LIFECYCLE_HOOKS","strats","forEach","hook","mergeHook","mergeAssets","parentVal","childVal","res","create","components","concat","mergeOptions","parent","child","options","mergeField","hasOwnProperty","isReservedTag","tagName","str","obj","split","tag","oldArrayMethods","Array","prototype","arrayMethods","methods","method","args","result","apply","inserted","ob","__ob__","slice","observerArray","dep","notify","id","Dep","subs","watcher","push","target","addDep","update","stack","pushTarget","popTarget","pop","length","Observer","isArray","__proto__","walk","i","observe","keys","defineReactive","childOb","depend","dependArray","console","log","current","isObj","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","attrs","type","children","start","element","chars","text","replace","end","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","JSON","stringify","trim","genProps","item","code","compileToFunction","template","renderFn","Function","callbacks","waiting","flushCallback","cb","nextTick","setTimeout","queue","has","flushSchedularQueue","run","queueWatcher","Watcher","exprOrFn","callback","getter","depsId","Set","deps","add","addSub","patch","oldVnode","vnode","createElm","isRealElement","nodeType","oldElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","replaceChild","textContent","updateProperties","newChildren","oldChildren","updateChildren","appendChild","innerHTML","isSameVnode","newVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","moveIndex","moveVnode","undefined","createComponent","init","componentInstance","$el","document","createElement","createTextNode","oldProps","newProps","newStyle","style","oldStyle","removeAttribute","styleName","className","setAttribute","lifecycleMixin","Vue","_update","prevVnode","_vnode","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","render","outerHTML","$nextTick","Ctor","_base","extend","_isComponent","cid","componentOptions","renderMixin","_c","arguments","_v","_s","val","mixin","ASSETS_TYPE","initAssetRegisters","definition","initExtend","extendOptions","Sub","VueComponent","initGlobalAPI"],"mappings":"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"}