{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/observe/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["/**\n * \n * @param {*} data 当前数据是不是对象\n * @returns \n */\nexport function isObject(data) {\n    return typeof data === 'object' && data !== null\n}\n/**\n * 定义一个不可枚举的属性\n * @param {*} data \n * @param {*} key \n * @param {*} value \n */\n\nexport function def(data,key,value) {\n    Object.defineProperty(data,key,{\n        enumerable:false,\n        configurable:false,\n        value\n    })\n}\n// 取值实现代理效果\nexport function proxy(vm,source,key) {\n    Object.defineProperty(vm,key,{\n        get(){\n            return vm[source][key]\n        },\n        set(newValue){\n            vm[source][key] = newValue;\n        }\n    })\n}\n\nexport function mergeOptions(parent,child) {\n    console.log(11,parent,22,child);\n    const options = {}\n\n    for (let key in parent) {\n        mergeField(key)\n    }\n    for (let key in child) {\n        // 如果已经合并过了就不需要再次合并了\n        debugger\n        if(!parent.hasOwnProperty(key)){\n            mergeField(key)\n        }\n    }\n    console.log(options);\n    function mergeField(key) {\n        if(typeof parent[key] === 'object' && typeof child[key] === 'object'){\n            options[key] = {\n                ...parent[key],\n                ...child[key]\n            }\n        }else if (child[key] == null) {\n            options[key] = parent[key];\n        }else {\n            // 子（新）覆盖父（旧）的\n            // data:{}  data:123   -> data:123\n            options[key] = child[key]\n        }\n        \n    }\n    return options\n}","// 重写数组的7个方法 push  shift unshift pop reverse sort splice\n// slice不会改变原数组\n\nlet oldArrayMethods = Array.prototype\n\n// value.__protp__ = arrayMethods\n// arrayMethods.__proto__ = oldArrayMethods\nexport const arrayMethods = Object.create(oldArrayMethods)\n\nconst methods = [\n    'push',\n    'shift',\n    'unshift',\n    'pop',\n    'reverse',\n    'sort',\n    'splice',\n]\n\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        console.log('用户调用了push'); // AOP切片编程\n        const result = oldArrayMethods[method].apply(this,args) // 调用原生的数组方法\n        // push unshift 添加的元素可能还是一个对象\n        let inserted;\n        let ob = this.__ob__\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args;  \n                break;\n            case 'splice': // 3个 新增的属性 splice 有删除 新增的功能 arr.splice(0,1,{name:1})\n                inserted = args.slice(2)\n            default:\n                break;\n        }\n\n        if(inserted) ob.observerArray(inserted)\n\n        return result\n    }\n})","import {isObject,def} from '../util/index'\nimport {arrayMethods} from './array.js'\n// 把data中的数据 都重新定义\n// 但Object.defineProperty 不能兼容ie8及以下 所以vue2无法兼容ie8\n\nclass Observer{\n    constructor(value) {\n        // 如果是数组，会对索引也添加set和get，最好对数组再进行特殊处理\n        // value.__ob__ = this // 给每一个监控过的对象都加一个属性\n        def(value,'__ob__',this)\n        if(Array.isArray(value)) {\n            // 不要对索引进行观测，影响性能\n            // 如果数组里放的是对象，再监控\n\n\n            // push shift 劫持\n\n            value.__proto__ = arrayMethods\n            this.observerArray(value)\n        }else {\n            // vue如果数据的层次过多 需要第一的去解析对象中的和属性，依次增加set和get方法\n            // vue3 的proxy 不用递归也不用加set和get\n            this.walk(value)\n        }\n        \n\n        \n    }\n    observerArray(value) { // [{}]\n        for(let i = 0; i < value.length; i++) {\n            observe(value[i])\n        }\n    }\n    // 遍历对象用\n    walk(data) {\n        let keys = Object.keys(data) // [name,age,address] ,对象中属性组成的数组\n        keys.forEach((key)=>{\n            defineReactive(data,key,data[key])\n        })\n\n        // for ( let i = 0; i < keys.length; i++ ) {\n        //     let key = keys[i]; // 取第i个属性\n        //     let value = data[key]; // 取第i个值\n        //     defineReactive(data,key,value) // 把这个key value变成响应式\n        // }\n    }\n}\n\nfunction defineReactive(data,key,value) {\n    observe(value) // 是不是对象 递归实现深度检测 \n    Object.defineProperty(data,key,{\n        configurable:true,\n        enumerable:true,\n        get() {\n            return value;\n        },\n        set(newValue) {\n            if( newValue === value) return;\n            console.log('值发生变化了');\n            observe(newValue) // 如果用户将一个值重新赋值成对象，需要劫持时做响应式\n            value = newValue\n        }\n    })\n}\n// 是不是对象\nexport function observe(data) {\n    let isObj = isObject(data)\n    // 不是对象\n    if(!isObj) {\n        return\n    }\n    // 是对象 需要观测数据 \n    return new Observer(data)\n    \n}","import {observe} from './observe/index'\nimport { proxy } from './util/index'\nexport function initState(vm) {\n    // vue的数据来源 属性 方法 数据 计算属性 watch ,也是vue的初始化流程\n    const opts = vm.$options\n    // console.log(opts);\n    if (opts.props) {\n        initProps(vm)\n    }\n    if (opts.method) {\n        initMethods(vm)\n    }\n    if (opts.data) {\n        initData(vm)\n    }\n    if (opts.computed) {\n        initComputed(vm)\n    }\n    if (opts.watch) {\n        initWatch(vm)\n    }\n}\nfunction initProps(){}\nfunction initMethods(){}\nfunction initData(vm){\n    // 数据初始化\n    let data = vm.$options.data; // 用户传递的data\n    data = vm._data = typeof data === 'function' ? data.call(vm):data // data可能是个函数（返回值是对象），也可能是对象，只需要对象\n    console.log(data);\n    // 数据劫持 用户改变数据时 希望可以得到通知 -> 刷新页面\n    // MVVM模式 数据驱动视图变化\n    // Object.defineProperty() 给属性添加get和set方法\n\n    for(let key in data){\n        proxy(vm,'_data',key)\n    }\n\n    observe(data) // 响应式\n}\nfunction initComputed(){}\nfunction initWatch(){}","// ast语法树 是用对象来描述js语法的  虚拟dom  用对象来描述dom节点的\n// ?: 匹配不捕获\n\n// arguments[0] 匹配到的标签 arguments[1] 匹配到的标签名字\n// let r  = '<ab:cd>'.match(startTagOpen)\n// console.log(r);  ['<ab:cd','ab:cd']\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa 两个斜杠：字符串一层正则一层\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:dasda> 命名空间标签\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);// 匹配标签结尾的</div>\n\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的 可以是双引号、单引号或者为空\n//console.log(`  aa=123`.match(attribute));\n\nconst startTagClose = /^\\s*(\\/?)>/ // 匹配标签结束的> 包含自闭合 <div />\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g  // 匹配花括号{{}}\n\n\nexport function parseHTML(html) {\n    let root = null; // ast语法树的树根\n    let currentParent; // 标识当前父亲是谁\n    let stack = [];\n    const ELEMENT_TYPE = 1;\n    const TEXT_TYPE = 3;\n\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n\n    function start(tagName, attrs) {\n        // 遇到开始标签 就创建一个ast元素\n        console.log('开始标签', tagName, '属性是:', attrs);\n\n        let element = createASTElement(tagName, attrs)\n        if (!root) {\n            root = element;\n        }\n        currentParent = element; // 把当前元素标记成父ast树\n        stack.push(element)\n    }\n    function chars(text) {\n        console.log('文本是', text);\n        text = text.replace(/\\s/g, '')\n        if (text) {\n            currentParent.children.push({\n                text,\n                type: TEXT_TYPE\n            })\n        }\n    }\n    function end(tagName) {\n        console.log('结束标签：', tagName);\n        let element = stack.pop(); // 拿到的是ast对象\n        // TODO: 是不是同一个 如 <div><p></a></p></div>\n        // 要表示当前这个p是属于这个div的儿子的\n        currentParent = stack[stack.length - 1]\n        if (currentParent) {\n            element.parent = currentParent\n            currentParent.children.push(element) // 实现了一个树的父子关系\n        }\n    }\n    // 不停的解析html\n    while (html) {\n        let textEnd = html.indexOf('<')\n        if (textEnd == 0) {\n\n            // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\n            let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果 tagName,attrs\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs) // 1解析开始标签\n                // console.log(666,startTagMatch);\n                continue; // 如果开始标签匹配完毕后 继续下一次 匹配\n            }\n            let endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1]); // 2解析结束标签\n                continue;\n            }\n        }\n        let text;\n        if (textEnd >= 0) {\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            advance(text.length)\n            chars(text) // 3解析文本\n        }\n    }\n    function advance(n) {\n        html = html.substring(n)\n    }\n    function parseStartTag() {\n        let start = html.match(startTagOpen);\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            // console.log('-----',start);\n            advance(start[0].length) // <div 将标签删除\n            // console.log(html);\n            let end, attr;\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                // 将属性进行解析\n                advance(attr[0].length); // 将属性去掉\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                })\n            }\n            if (end) { // 去掉开始标签的 >\n                advance(end[0].length);\n                return match\n            }\n            // console.log(match,html);\n        }\n\n    }\n    return root;\n}\n","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g  // 匹配花括号{{}}\nfunction genChildren(el) {\n    let children  = el.children\n    if(children && children.length>0){\n        return `${children.map((c)=>gen(c)).join(',')}`\n    }else {\n        return false;\n    }\n}\n\nfunction gen(node) {\n    if(node.type == 1){\n        // 元素标签\n        return generate(node)\n    }else{\n        // 文字标签\n        let text = node.text; // a {{name}} b {{age}} c\n        // _v(\"a\"+_s(name)+\"b\"+_s(age)+\"c\")\n        // 这里使用正则匹配，exec可以全取到，match只能取到name、age\n        let tokens = [];\n        let match,index;\n        let lastIndex = defaultTagRE.lastIndex = 0\n        while(match = defaultTagRE.exec(text)){\n            index = match.index;\n            if(index > lastIndex){\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)))\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n            lastIndex = index + match[0].length\n            \n        }\n        // 最后多余的字符串\n        if(lastIndex < text.length){\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        return `_v(${tokens.join('+')})`\n    }\n}\n\nfunction genProps(attrs) {\n    let str = ''\n    for(let i = 0; i < attrs.length; i++){ // [{name:'id',value:'app'}]\n        let attr = attrs[i];\n        if(attr.name == 'style'){\n            // style=\"color:red;fontSize:14px\" => style:{color:'red}.id:name\n            let obj = {};\n            attr.value.split(';').forEach((item)=>{\n                let [key,value] = item.split(':')\n                obj[key] = value;\n            })\n            attr.value = obj\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\n\nexport function generate(el) {\n    let children = genChildren(el)\n    let code = `_c(\"${el.tag}\",${el.attrs.length?genProps(el.attrs):'undefined'}${children?`,${children}`:''})`\n    return code\n}","import {parseHTML} from './parser-html'\nimport { generate } from './generate'\n\nexport function compileToFunction(template) {\n    // 1）解析html字符串 将html字符串 -> ast语法树\n    let root = parseHTML(template)\n    // 需要将ast语法树转成render函数 就是字符串拼接 （模版引擎）\n    let code  = generate(root)\n    // 核心思路就是将模版转化成下面这段字符串\n    // <div id=\"app\"><p>hello {{name}}</p> hello</div>\n    // 将ast树 再次转化成js的语法\n    // _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello'+_s(name))),_v('hello'))\n\n\n    // 所有模版引擎的实现 都需要 new Function + with\n    // with为了拿到data中的数据\n    // function () {\n    //     with(this){  this为vm实例 vm.render\n    //         return _c(\"div\",{id:\"app\",style:{\"color\":\"red\",\"background-color\":\" blue\"}},_v(\"hello\"),_c(\"p\",undefined,_v(\"123\"+_s(address))))\n    //     }\n    // }\n    let renderFn = new Function(`with(this){ return ${code}}`)\n    console.log(root,'---');\n\n    // vue的render 他返回的是虚拟dom\n    return renderFn;\n}\n\n// 结点\n{/* <div id=\"app\">\n    <p>hello</p>\n</div>\n\n// 语法\nlet root = {\n    tag:'div',\n    attrs:[{name:'id',value:'app'}],\n    parent:null,\n    type:1, // 元素\n    children:[{\n        tag:'p',\n        attrs:[],\n        parent:root,\n        type:1, // 元素\n        children:[{\n            text:'hello',\n            type:3, // 文本\n        }]\n    }]\n} */}","class Watcher{\n    constructor(vm,exprOrFn,callback,options){ // 固定顺序\n        this.vm = vm;\n        this.getter = exprOrFn;\n        this.callback = callback;\n        this.options = options;\n        this.get()\n    }\n    get(){\n        this.getter()\n    }\n}\nexport default Watcher","export function patch(oldVnode, vnode) {\n    // 递归创建真实节点 替换掉老的节点\n    const isRealElement = oldVnode.nodeType;\n    if (isRealElement) {\n        const oldElm = oldVnode;\n        const parentElm = oldVnode.parentNode;\n\n        let el = createElm(vnode)\n        console.log('****',el);\n        parentElm.insertBefore(el, oldElm.nextSibling) // 新的插到旧的下面去\n        parentElm.removeChild(oldElm)\n\n        return el;\n    }\n}\nfunction createElm(vnode) { // 根据虚拟节点 常见真实的节点\n    // return document.createElement('div')\n    const {tag,data,key,children,text} = vnode;\n    // 是标签就创建标签\n    if(typeof tag === 'string'){\n        vnode.el = document.createElement(tag)\n        updateProperties(vnode)\n        children.forEach((child)=>{\n            vnode.el.appendChild(createElm(child)) // 递归创建儿子节点 将儿子节点扔到父节点中\n        })\n    }else {\n        // 虚拟dom上映射真实dom 方便后续操作\n        vnode.el = document.createTextNode(text)\n    }\n    \n    return vnode.el\n}\n\nfunction updateProperties(vnode) {\n    let newProps = vnode.data || {};\n    let el = vnode.el;\n    for(let key in newProps){\n        if(key === 'style'){\n            for(let styleName in newProps.style){\n                el.style[styleName] = newProps.style[styleName];\n            }\n        }else if(key === 'class'){\n            el.className = newProps.class;\n        }else {\n            el.setAttribute(key,newProps[key])\n        }\n    }\n}","import Watcher from \"./observe/watcher\";\nimport {patch} from './vdom/patch'\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        // 拿到render返回的虚拟节点 生成真实节点\n        const vm = this;\n        vm.$el = patch(vm.$el,vnode)\n    }\n}\n\nexport function mountComponent(vm,el) {\n    const options = vm.$options;\n    vm.$el = el // 真实的dom元素\n\n    // Watcher 就是用来渲染的\n    // vm._render 通过解析的render方法 渲染出虚拟dom\n    // vm._update 通过虚拟dom 创建真实的dom\n\n    // 渲染页面\n    let updateComponent = () =>{ // 无论是渲染还是更新都会调用此方法\n        // 返回的是虚拟dom\n        vm._update(vm._render());\n    }\n    // 渲染watcher  每个组件都有一个watcher\n    // 每次数据变化后 都会重新执行updateComponent方法\n    new Watcher(vm,updateComponent,()=>{},true) // true表示他是一个渲染watcher\n}","import {initState} from './state'\nimport { compileToFunction } from './compiler/index.js';\nimport { mountComponent } from './lifecycle';\n// 在原型上增加一个init方法\nexport function initMixin(Vue) {\n    // 初始化流程\n    Vue.prototype._init = function (options) {\n        console.log(options);\n        const vm = this\n        vm.$options = options // 用户传递的属性 data,watch\n\n        // 初始化状态\n        initState(vm) \n\n\n\n\n        // 如果用户传入了el属性 需要将页面渲染出来 \n        // 实现挂在流程\n        if(vm.$options.el) {\n            vm.$mount(vm.$options.el)\n        }\n\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options\n        el = document.querySelector(el); // 返回一个dom元素\n\n        // 默认会先查找有没有render  没有render会用template 没有template用el中的内容\n\n        if(!options.render) {\n            // 对模版进行编译\n            let template = options.template; // 取出模版\n            if(!template && el) {\n                template = el.outerHTML // 整个div  \n            }\n            console.log(template);\n            const render = compileToFunction(template);\n            console.log('render:',render);\n            options.render = render\n            // 需要把template 转换成render函数  vue1.0用的正则 vue2.0虚拟dom\n        }\n        // options.render\n\n        // 渲染当前组件 挂载这个组件\n        mountComponent(vm,el)\n    }\n}","export function createElement(tag,data={},...children) {\n    let key = data.key;\n    if(key){\n        delete data.key\n    }\n    return vnode(tag,data,key,children,undefined)\n}\nexport function createTextNode(text) {\n    return vnode(undefined,undefined,undefined,undefined,text)\n}\n\nfunction vnode(tag,data,key,children,text) {\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n    }\n}\n// 虚拟节点 就是通过_c _v 实现用对象来描述dom的操作（对象）\n\n// 1）将template 转成ast树 -> 生成render方法 -> 生成虚拟dom -> 真实的dom\n// 页面更新的话 重新生成虚拟dom 和上次做对比 -> 更新dom\n\n// {\n//     tag:'div',\n//     key:undefined,\n//     data:{},\n//     children:[],\n//     text:undefined\n// }","import { createElement, createTextNode } from \"./vdom/create-element\"\n\nexport function renderMixin(Vue) {\n    // _c 创建元素的虚拟节点\n    // _v 创建文本的虚拟节点\n    // _s JSON.stringfy\n    Vue.prototype._c = function (...args) {\n        return createElement(...args) // tag,data,children1,children\n    }\n    Vue.prototype._v = function (text) {\n        return createTextNode(text)\n    }\n    Vue.prototype._s = function (val) {\n        return val == null? '':(typeof val == 'object'? JSON.stringify(val):val)\n    }\n\n    Vue.prototype._render = function () {\n       const vm = this\n       \n       const {render} = vm.$options\n    //    console.log(render,this._s(),this);\n    //    render()是不行的 render中with(this){内部this指向的是window} 必须绑定\n       let vnode = render.call(vm) // 去实例上取值\n       return vnode\n    }\n}","import { mergeOptions } from \"../util/index\";\n\nexport function initGlobalAPI(Vue) {\n    // 全局api不在实例上 放在一个对象里整合了所有全局内容\n    Vue.options = {};\n    Vue.mixin = function (mixin) {\n        this.options = mergeOptions(this.options,mixin)\n    }\n    \n    // 生命周期的合并策略   [beforeCreate,beforeCreate]\n    Vue.mixin({\n        b:{m:1},\n        c:1,\n        beforeCreate(){\n\n        }\n    })\n    Vue.mixin({\n        b:{n:2},\n        d:2,\n        beforeCreate(){\n\n        }\n    })\n    console.log(Vue.options,'****');\n}","import {initMixin} from './init.js'\nimport {renderMixin} from './render'\nimport {lifecycleMixin} from './lifecycle'\nimport {initGlobalAPI} from './initGlobalAPI/index'\nfunction Vue(options) {\n    // 进行Vue的初始化操作\n    this._init(options)\n}\n// 通过文件引入的方式，给vue原型挂载方法\ninitMixin(Vue) // 给原型上添加一个_init方法\nrenderMixin(Vue)\nlifecycleMixin(Vue)\n\n// 初始化全局api\ninitGlobalAPI(Vue)\n\n\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","mergeOptions","parent","child","console","log","options","mergeField","hasOwnProperty","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observerArray","Observer","isArray","__proto__","walk","i","length","observe","keys","defineReactive","isObj","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","start","element","push","chars","text","replace","end","pop","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","JSON","stringify","trim","genProps","str","obj","split","item","code","compileToFunction","template","renderFn","Function","Watcher","exprOrFn","callback","getter","patch","oldVnode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","updateComponent","_render","initMixin","_init","$mount","querySelector","render","outerHTML","undefined","renderMixin","_c","_v","_s","val","initGlobalAPI","mixin","b","m","beforeCreate","d"],"mappings":"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"}